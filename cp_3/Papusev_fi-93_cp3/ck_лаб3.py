# -*- coding: utf-8 -*-
"""CK_лаб3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aiADzvgvQUu0TZNB9u5vzt82desR-XTA
"""

def ober(a,n):
  a=a%n
  r0=n
  r1=a
  q=[ 0 for i in range (n)]
  u=[ 0 for i in range (n)]
  v=[ 0 for i in range (n)]
  u[0]=1
  v[1]=1
  q[0]=n//a
  i=0
  while True:
    i=i+1
    temp=r0
    r0=r1
    r1=temp%r1
    u[i+1]=(u[i-1]-q[i-1]*u[i])
    v[i+1]=(v[i-1]-q[i-1]*v[i])
    if r1==0:
      return v[i]%n
    q[i]=r0//r1

def lin_por (a,b,n):
  import math
  a=a%n
  b=b%n
  d=0
  x0=0
  if math.gcd(a,n)==1:
    return [(ober(a,n)*b)%n]
  d=math.gcd(a,n)
  if (b%d)!=0:
    return [-9999]
  a1=int(a/d)
  b1=int(b/d)
  n1=int(n/d)
  x0 = (ober(a1,n1)*b1)%n1
  x=[0 for i in range (d)]
  for i in range (d):
    x[i]=(x0+n1*i)%n
  return x

def count_liters(Y):
  count=[ 0 for i in range(32)]
  All=0
  for char in Y:
    if ord(char)>=1072 and ord(char)<=1072+31:
      count[ord(char)-1072]=count[ord(char)-1072]+1
  for i in range(32):
    All=All+count[i]
  for i in range(32):
    count[i]=count[i]/All
  return count

def Logik(Y):
  count=count_liters(Y)
  if count[15]>0.04 and count[0]>0.04 and count[5]>0.04 and count[21]<0.02 and count[26]<0.02:
    return 1
  return 0

def deshifr (Y,a,b,n):
  X=str()
  A=ober(a,n*n)
  temp1=0
  temp2=0
  for i in range (0,len(Y)-1,2):
    in1=(ord(Y[i])-1072)*n+(ord(Y[i+1])-1072)
    in2=(A*(in1-b))%(n*n)
    temp2=in2%n
    temp1=(in2-temp2)/n
    X=X+str(chr(int(temp1+1072)))
    X=X+str(chr(int(temp2+1072)))
  return X

def count_bigrams(Y):
    import numpy as np
    count=np.array([[ 0.0 for i in range(32)] for i in range(32)])
    a1=0
    a2=0
    for i in range(0,(len(Y)-1),2):
        if ord(Y[i])>=1072 and ord(Y[i])<=1072+31:
          a1=ord(Y[i])-1072
          a2=ord(Y[i+1])-1072
          count[a1,a2]=count[a2,a2]+1
    All=0
    for i in range(32):
      for j in range (32):
        All=All+count[i,j]
    for i in range(32):
      for j in range (32):
        count[i,j]=count[i,j]/All
    return count

def top10 (count,n):
  import numpy as np
  Top= np.array([[0,0] for i in range (10)])
  for k in range (10):
    max=0
    in1=0
    in2=0
    for i in range (len(count)):
      for j in range (len(count)):
        if count[i,j]>max:
          max=count[i,j]
          in1=i
          in2=j
    count[in1,in2]=0
    Top[k,0]=in1
    Top[k,1]=in2
  Top2=[0,0,0,0,0,0,0,0,0,0]
  for i in range(10):
    Top2[i]=Top[i,0]*n+Top[i,1]
  return Top2

def top10_real (n):
  import numpy as np
  Top2=[0,0,0,0,0,0,0,0,0,0]
  Top= np.array([[17,18], [16,0], [5,13],[13,8], [13,0],[0,13], [13,14], [14,2], [10,14], [16,5]])
  for i in range(10):
    Top2[i]=Top[i,0]*n+Top[i,1]
  return Top2

def roshifr (Y,n):
  top=top10(count_bigrams(Y),n)
  top_real=top10_real(n)
  for i in range(10):
    for j in range(10):
      if i!=j:
        for f in range(10):
          for t in range(10):
            if f!=t:
              y1=top[i]
              y2=top[j]
              x1=top_real[f]
              x2=top_real[t]
              a=lin_por((x1-x2)%(n*n),(y1-y2)%(n*n),n*n)
              if a !=[-9999]:
                for z in range (len(a)):
                  a[z]=ober(a[z],n*n)
                  b=(y1-a[z]*x1)%(n*n)
                  if Logik(deshifr(Y,a[z],b,n))==1:
                    print(a[z],b, deshifr(Y,a[z],b,n))
  return 0

Text_var=open('Variant14')
a=str()
for char in Text_var.read():
  a=a+str(char)
print(roshifr(a,31))